{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Notification","message","error","className","text","Filter","filterText","setFilterText","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","persons","setPersons","notify","onSubmit","preventDefault","person","find","name","window","confirm","changedPerson","number","returnedPerson","map","pers","catch","personObject","concat","type","Persons","filter","toLowerCase","includes","onClick","initialPersons","App","useState","notification","setNotification","useEffect","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e04b36e8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst personService = { getAll, create, remove, update }\r\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (message.error) {\n    return (\n      <div className=\"error\">\n        {message.text}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"notification\">\n      {message.text}\n    </div>\n  )\n}\n\nconst Filter = ({ filterText, setFilterText }) => {\n  const handleFilterChange = (event) => {\n    setFilterText(event.target.value)\n  }\n  return <div>filter shown with <input value={filterText} onChange={handleFilterChange} /></div>\n}\n\nconst PersonForm = ({ newName, setNewName, newNumber, setNewNumber, persons, setPersons, notify }) => {\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n    if (person) {\n      if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const changedPerson = { ...person, number: newNumber }\n        personService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(pers => pers.id !== person.id ? pers : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            notify(`Updated ${returnedPerson.name}`)\n          })\n          .catch((error) => {\n            setNewName('')\n            setNewNumber('')\n            notify(\n              error.response.data.error, true\n            )\n          })\n\n      }\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        notify(`Added ${returnedPerson.name}`)\n      })\n      .catch((error) => {\n        setNewName('')\n        setNewNumber('')\n        notify(\n          error.response.data.error, true\n        )\n      })\n\n  }\n\n  return <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n}\n\nconst Persons = ({ persons, setPersons, filterText, notify }) => {\n  const handleDeleteButtonClick = (id, name) => () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(() => personService.getAll()).then(initialPersons => {\n          setPersons(initialPersons)\n          notify(`Deleted ${name}`)\n        })\n        .catch(() => {\n          notify(\n            `Information of '${name}' has already been removed from server`, true\n          )\n          setPersons(persons.filter(pers => pers.id !== id))\n        })\n    }\n  }\n  return persons.filter(person => person.name.toLowerCase().includes(filterText.toLowerCase()))\n    .map(person => <p key={person.id}>{person.name} {person.number} <button onClick={handleDeleteButtonClick(person.id, person.name)}>delete</button></p>)\n}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterText, setFilterText] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons))\n  }, [])\n  const notify = (text, error = false) => {\n    setNotification({ text, error })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter filterText={filterText} setFilterText={setFilterText} />\n      <h2>Add a new</h2>\n      <PersonForm newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} persons={persons} setPersons={setPersons} notify={notify} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filterText={filterText} notify={notify} />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}